sample.interval=20000
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"paste0" "FUN" "vapply" "urlify" "paste0" "writeLink" "writeBlock" "writeContent" "writeWrapped" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"ls" "FUN" "lapply" ".rs.objectsOnSearchPath" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"gc" "system.time" 
"gc" "system.time" 
"gc" "system.time" 
"gc" "system.time" 
"substring" ".rs.startsWith" ".rs.fuzzyMatches" ".rs.getCompletionsSearchPath" "Reduce" "<Anonymous>" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"get" "getExportedValue" "::" "formals" "as.list" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"%in%" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"psub" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"mget" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"as.character" "::" "do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"paste0" "writeLines" "writeLinesUTF8" "of1" "writeSection" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"objects" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"do.call" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"list2env" "lazyLoadDBexec" "tools:::fetchRdDB" "utils:::.getHelpFile" "prepare_Rd" "Rd2HTML" "tools:::httpd" "withCallingHandlers" "suppressWarnings" ".rs.getHelp" ".rs.getHelpFromObject" ".rs.getHelpFunction" "<Anonymous>" 
"gc" "system.time" 
"gc" "system.time" 
"gc" "system.time" 
"sort" "as.factor" "split.default" "split" "Ops.numeric_version" ">=" "<Anonymous>" 
"isTRUE" "leavePara" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"grep" "isBlankRd" "writeWrapped" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"psub" "htmlify" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"grep" "isBlankLineRd" "addParaBreaks" "writeLines" "writeLinesUTF8" "of1" "writeBlock" "writeContent" "writeSection" "Rd2HTML" "<Anonymous>" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "withCallingHandlers" "<Anonymous>" 
"source" 
"$" "getInlineInfo" "tryInline" "cmpCall" "cmp" "cmpBuiltinArgs" "cmpBuiltin" "cmpDotInternalCall" "h" "tryInline" "cmpCall" "cmp" "cmpBuiltinArgs" "cmpDispatch" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
".External2" "type.convert" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
".External2" "type.convert" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "best" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
".External2" "type.convert" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
".External2" "type.convert" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
"scan" "read.table" "read.csv" "rankhospital" 
".External2" "type.convert" "read.table" "read.csv" "rankhospital" 
"exists" "findCenvVar" "getInlineInfo" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"[<-.data.frame" "[<-" "rankall" 
"str.default" "str" "<Anonymous>" "do.call" "strSub" "str.default" "NextMethod" "str.data.frame" "str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try" "eval" "eval" "withVisible" "evalVis" "capture.output" "eval" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.withTimeLimit" ".rs.valueFromStr" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" ".rs.valueContents" "<Anonymous>" 
"%in%" "getOption" "file" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
".External2" "type.convert" "read.table" "read.csv" "rankall" 
"eval" "match.arg" "sort.int" "sort.default" "sort" "as.factor" "split.default" "split" "[<-.data.frame" "[<-" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"order" "[.data.frame" "[" "rankall" 
"print.default" "print" "print.data.frame" "<Anonymous>" 
"print.default" "print" "print.data.frame" "<Anonymous>" 
"FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "FUN" "lapply" "unlist" "unique" "findLocalsList1" "findLocalsList" "funEnv" "make.functionContext" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"match.arg" "type.convert" "read.table" "read.csv" "rankall" 
"attr" "getExprSrcref" "cb$setcurexpr" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cb$putconst" "cmpCallArgs" "cmpCallSymFun" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"<Anonymous>" "do.call" "as.data.frame.list" "as.data.frame" "data.frame" "rankall" 
"print.default" "print" "print.data.frame" "<Anonymous>" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
".External2" "type.convert" "read.table" "read.csv" "rankall" 
"eval" "match.arg" "sort.int" "sort.default" "sort" "as.factor" "split.default" "split" "[<-.data.frame" "[<-" "rankall" 
"cb$putcode" "cmpSym" "cmp" "cmpDispatch" "h" "tryInline" "cmpCall" "cmp" "cmpSymbolAssign" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "h" "tryInline" "cmpCall" "cmp" "genCode" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"data.frame" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"order" "[.data.frame" "[" "rankall" 
"subset.data.frame" "subset" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"scan" "read.table" "read.csv" "rankall" 
"sys.call" "%in%" "[[.data.frame" "[[" "[.data.frame" "[" "FUN" "lapply" "split.data.frame" "split" "rankall" 
".getNamespaceInfo" "getExported